{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","to","person","isExistPerson","selectedPerson","getParentSlug","name","sex","born","died","fatherName","motherName","slug","classNames","PeopleTable","people","useParams","personData","parent","some","human","parentName","find","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","App","useState","setPeople","loading","setLoading","error","setError","role","isActive","onClick","persons","catch","finally","path","element","replace","index","length","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.07626ba8.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  to: string,\n  person: Person,\n  isExistPerson: (parent: string | null) => boolean | undefined,\n  selectedPerson: string,\n  getParentSlug: (parentName: string | null) => string | undefined,\n};\n\nexport const PersonLink: FC<Props> = ({\n  to,\n  person,\n  isExistPerson,\n  selectedPerson,\n  getParentSlug,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        '',\n        { 'has-background-warning': slug === selectedPerson },\n      )}\n    >\n      <td>\n        <NavLink\n          to={`../${to}`}\n          className={classNames(\n            '',\n            { 'has-text-danger': sex === 'f' },\n          )}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {isExistPerson(motherName) ? (\n          <NavLink to={`../${getParentSlug(motherName)}` || ''} className=\"has-text-danger\">\n            {motherName}\n          </NavLink>\n        ) : (\n          <p>{motherName || '-'}</p>\n        )}\n      </td>\n      <td>\n        {isExistPerson(fatherName) ? (\n          <NavLink to={`../${getParentSlug(fatherName)}` || ''}>\n            {fatherName}\n          </NavLink>\n        ) : (\n          <p>{fatherName || '-'}</p>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[] | null,\n};\n\nexport const PeopleTable: FC <Props> = ({ people }) => {\n  const { personData = '' } = useParams();\n\n  const isExistPerson = (parent: string | null) => {\n    if (parent) {\n      return (people?.some(human => human.name === parent));\n    }\n\n    return false;\n  };\n\n  const getParentSlug = (parentName: string | null) => {\n    const parent = people?.find(human => human.name === parentName);\n\n    return parent?.slug;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map(person => (\n          <PersonLink\n            key={person.name}\n            to={person.slug}\n            person={person}\n            isExistPerson={isExistPerson}\n            selectedPerson={personData}\n            getParentSlug={getParentSlug}\n          />\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport { Loader } from './components/Loader';\n\nimport './App.scss';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { Person } from './types';\nimport { getPeople } from './api';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const handelClickOnPeopleTable = () => {\n    setLoading(true);\n    getPeople()\n      .then((persons) => setPeople(persons))\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n              to=\"people\"\n              onClick={handelClickOnPeopleTable}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route path=\"people\">\n              <Route\n                index\n                element={(\n                  <>\n                    <h1 className=\"title\">People Page</h1>\n                    <div className=\"block\">\n                      <div className=\"box table-container\">\n                        {loading && <Loader />}\n\n                        {error && (\n                          <p\n                            data-cy=\"peopleLoadingError\"\n                            className=\"has-text-danger\"\n                          >\n                            Something went wrong\n                          </p>\n                        )}\n\n                        {people?.length === 0 && (\n                          <p data-cy=\"noPeopleMessage\">\n                            There are no people on the server\n                          </p>\n                        )}\n\n                        {!loading && <PeopleTable people={people} />}\n                      </div>\n                    </div>\n                  </>\n                )}\n              />\n\n              <Route\n                path=\":personData\"\n                element={(\n                  <>\n                    <h1 className=\"title\">People Page</h1>\n                    <div className=\"block\">\n                      <div className=\"box table-container\">\n                        {loading && <Loader />}\n\n                        {!loading && <PeopleTable people={people} />}\n                      </div>\n                    </div>\n                  </>\n                )}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}